/*
 * InsertMarkDialog.java
 *
 * Created on April 4, 2007, 12:31 PM
 */

package ui.dialog;

import com.megginson.sax.DataWriter;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import org.xml.sax.SAXException;
import ui.MainForm;
import util.MessageInfo;
import util.Util;
import util.WaveInfo;
import wavemark.*;

/**
 *
 * @author  ady
 */
public class OptionDialog extends javax.swing.JDialog {
    
    
    /** Creates new form InsertMarkDialog */
    public OptionDialog(java.awt.Frame parent, boolean modal, Point point) {
        super(parent, modal);
        initComponents();
        //Point point = this.mainForm.getLocationOnScreen();
        this.setLocation(point.x,point.y+80);
        this.loadDefaultPreset("default.wp");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanelMenuInsert = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jCBMode = new javax.swing.JComboBox();
        jRBLowbitEmbed = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jCBLSB = new javax.swing.JComboBox();
        jRBEchoEmbed = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        jTFAmplitude = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jCheckWarning = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jCheckCompress = new javax.swing.JCheckBox();
        jCheckEncrypt = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanelMenuInsert.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelMenuInsert.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Georgia", 1, 14));
        jLabel2.setText("Watermarking Configuration");
        jPanelMenuInsert.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanelMenuInsert.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 720, 10));

        jLabel1.setText("Configure watermarking option will used in both embedding and extracting process. You can save your modificaton  to file ");
        jPanelMenuInsert.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setText("Watermarking Mode");
        jPanelMenuInsert.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jCBMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Blind Watermarking", "Non Blind (Sychronization) Watermarking" }));
        jPanelMenuInsert.add(jCBMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 180, -1));

        jRBLowbitEmbed.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRBLowbitEmbed);
        jRBLowbitEmbed.setSelected(true);
        jRBLowbitEmbed.setText(" Low Bit Coding");
        jRBLowbitEmbed.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRBLowbitEmbed.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanelMenuInsert.add(jRBLowbitEmbed, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        jLabel4.setText("- LSB used");
        jPanelMenuInsert.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, -1, -1));

        jCBLSB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        jPanelMenuInsert.add(jCBLSB, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 40, -1));

        jRBEchoEmbed.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRBEchoEmbed);
        jRBEchoEmbed.setText(" Echo Hiding");
        jRBEchoEmbed.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRBEchoEmbed.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanelMenuInsert.add(jRBEchoEmbed, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabel16.setText("- Echo Amplitude");
        jPanelMenuInsert.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));

        jTFAmplitude.setText("0.5");
        jPanelMenuInsert.add(jTFAmplitude, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 40, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText("Watermarking Method");
        jPanelMenuInsert.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jCheckWarning.setBackground(new java.awt.Color(255, 255, 255));
        jCheckWarning.setText("  Display warning when message size is larger than embedding capacity");
        jCheckWarning.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckWarning.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanelMenuInsert.add(jCheckWarning, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, -1, -1));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wavemark/images/corner.jpg")));
        jPanelMenuInsert.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 290, 110, 200));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wavemark/images/option.jpg")));
        jPanelMenuInsert.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 0, 60, 60));

        jCheckCompress.setBackground(new java.awt.Color(255, 255, 255));
        jCheckCompress.setText("  Compress message");
        jCheckCompress.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckCompress.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanelMenuInsert.add(jCheckCompress, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, -1, -1));

        jCheckEncrypt.setBackground(new java.awt.Color(255, 255, 255));
        jCheckEncrypt.setText("  Encrypt message for enchaced security");
        jCheckEncrypt.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckEncrypt.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanelMenuInsert.add(jCheckEncrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText("Misc Option");
        jPanelMenuInsert.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, -1, -1));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanelMenuInsert.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 20, 410));

        jButtonSave.setMnemonic('S');
        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jPanelMenuInsert.add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, -1));

        getContentPane().add(jPanelMenuInsert, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-800)/2, (screenSize.height-520)/2, 800, 520);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
// TODO add your handling code here:
        String file = System.getProperty("user.dir")+ "\\preset\\default.wp";
        try {
            savePreset(file);
        } catch (SAXException ex) {
            ex.printStackTrace();
        }        
    }//GEN-LAST:event_jButtonSaveActionPerformed
    
private void savePreset(String  file) throws SAXException{
        
        FileWriter fw = null;
        try {
            fw = new FileWriter(file);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        DataWriter w = new DataWriter(fw);
	w.setIndentStep(2);
	w.startDocument();
	w.startElement("config");
	
        w.dataElement("mode", Integer.toString(jCBMode.getSelectedIndex()));

        
        if (jRBLowbitEmbed.isSelected()){
            w.dataElement("method", "0");
            w.dataElement("lsb", String.valueOf(jCBLSB.getSelectedIndex()+1));
        }else{
            w.dataElement("method", "1");
            w.dataElement("amplitude", jTFAmplitude.getText());
        }
        
        if (jCheckWarning.isSelected())      
            w.dataElement("warning", "1");
        else
            w.dataElement("warning", "0");       
        
        
        if (jCheckCompress.isSelected()){
            w.dataElement("compress", "1");                        
        }else{
            w.dataElement("compress", "0");                                   
        }
        
        if (jCheckEncrypt.isSelected())
            w.dataElement("encrypt", "1");        
        else
            w.dataElement("encrypt", "0");
        
        w.endElement("config");
	w.endDocument();
    }

    private void loadDefaultPreset(String filename){
        File file = new File(System.getProperty("user.dir") + "\\preset\\" + filename);
        
        int mode =  Integer.parseInt(Util.getValue(file, "mode"));
        jCBMode.setSelectedIndex(mode);
        
        
        int method =  Integer.parseInt(Util.getValue(file, "method"));
        
        if (method == 0){
            jRBLowbitEmbed.setSelected(true);
            int lsb = Integer.parseInt(Util.getValue(file,"lsb"));
            jCBLSB.setSelectedIndex(lsb-1);
        }else{
            jRBEchoEmbed.setSelected(true);
            jTFAmplitude.setText(Util.getValue(file,"amplitude"));
        }
        
        int warning = Integer.parseInt(Util.getValue(file, "warning"));
        
        if(warning==1)    
            jCheckWarning.setSelected(true);
        else
            jCheckWarning.setSelected(false);
        
        int encrypt = Integer.parseInt(Util.getValue(file, "encrypt"));
        
        if(encrypt==1)    
            jCheckEncrypt.setSelected(true);
        else
            jCheckEncrypt.setSelected(false);
        
        int compress = Integer.parseInt(Util.getValue(file, "compress"));
        
        if(compress==1){    
            jCheckCompress.setSelected(true);
        }else{
            jCheckCompress.setSelected(false);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox jCBLSB;
    private javax.swing.JComboBox jCBMode;
    private javax.swing.JCheckBox jCheckCompress;
    private javax.swing.JCheckBox jCheckEncrypt;
    private javax.swing.JCheckBox jCheckWarning;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelMenuInsert;
    private javax.swing.JRadioButton jRBEchoEmbed;
    private javax.swing.JRadioButton jRBLowbitEmbed;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTFAmplitude;
    // End of variables declaration//GEN-END:variables
    
}
